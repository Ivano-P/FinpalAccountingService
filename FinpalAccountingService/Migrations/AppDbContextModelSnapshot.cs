// <auto-generated />
using System;
using FinpalAccountingService.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinpalAccountingService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("FinpalAccountingService.Models.Budget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompteId")
                        .HasColumnType("int");

                    b.Property<int?>("CompteMensuelId")
                        .HasColumnType("int");

                    b.Property<decimal>("Montant")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompteId");

                    b.HasIndex("CompteMensuelId");

                    b.ToTable("Budget");
                });

            modelBuilder.Entity("FinpalAccountingService.Models.Compte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Partage")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("SharingUserId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Solde")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Compte");
                });

            modelBuilder.Entity("FinpalAccountingService.Models.CompteAnnuel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Annee")
                        .HasColumnType("int");

                    b.Property<decimal>("SoldeDebut")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SoldeFin")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CompteAnnuel");
                });

            modelBuilder.Entity("FinpalAccountingService.Models.CompteMensuel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompteAnnuelId")
                        .HasColumnType("int");

                    b.Property<int>("Mois")
                        .HasColumnType("int");

                    b.Property<decimal>("SoldeDebut")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SoldeFin")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CompteAnnuelId");

                    b.ToTable("CompteMensuel");
                });

            modelBuilder.Entity("FinpalAccountingService.Models.Epargne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompteDepotId")
                        .HasColumnType("int");

                    b.Property<int?>("CompteMensuelId")
                        .HasColumnType("int");

                    b.Property<int>("Frequence")
                        .HasColumnType("int");

                    b.Property<decimal>("Montant")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompteDepotId");

                    b.HasIndex("CompteMensuelId");

                    b.ToTable("Epargne");
                });

            modelBuilder.Entity("FinpalAccountingService.Models.Facture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompteId")
                        .HasColumnType("int");

                    b.Property<int?>("CompteMensuelId")
                        .HasColumnType("int");

                    b.Property<int>("Frequence")
                        .HasColumnType("int");

                    b.Property<int>("JourPrelevement")
                        .HasColumnType("int");

                    b.Property<decimal>("Montant")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Partage")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("SharingUserId")
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("TauxDePartage")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("CompteId");

                    b.HasIndex("CompteMensuelId");

                    b.ToTable("Facture");
                });

            modelBuilder.Entity("FinpalAccountingService.Models.Revenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Activite")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CompteId")
                        .HasColumnType("int");

                    b.Property<int?>("CompteMensuelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Montant")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Periodicite")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompteId");

                    b.HasIndex("CompteMensuelId");

                    b.ToTable("Revenu");
                });

            modelBuilder.Entity("FinpalAccountingService.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BudgetId")
                        .HasColumnType("int");

                    b.Property<decimal>("Montant")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Partage")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PersonnePartage")
                        .HasColumnType("longtext");

                    b.Property<int>("SousType")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("TauxDePartage")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BudgetId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("FinpalAccountingService.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FinpalAccountingService.Models.Budget", b =>
                {
                    b.HasOne("FinpalAccountingService.Models.Compte", "Compte")
                        .WithMany()
                        .HasForeignKey("CompteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinpalAccountingService.Models.CompteMensuel", null)
                        .WithMany("Budgets")
                        .HasForeignKey("CompteMensuelId");

                    b.Navigation("Compte");
                });

            modelBuilder.Entity("FinpalAccountingService.Models.Compte", b =>
                {
                    b.HasOne("FinpalAccountingService.Models.User", "User")
                        .WithMany("Comptes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinpalAccountingService.Models.CompteAnnuel", b =>
                {
                    b.HasOne("FinpalAccountingService.Models.User", "User")
                        .WithMany("ComptesAnnuels")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinpalAccountingService.Models.CompteMensuel", b =>
                {
                    b.HasOne("FinpalAccountingService.Models.CompteAnnuel", "CompteAnnuel")
                        .WithMany("ComptesMensuels")
                        .HasForeignKey("CompteAnnuelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompteAnnuel");
                });

            modelBuilder.Entity("FinpalAccountingService.Models.Epargne", b =>
                {
                    b.HasOne("FinpalAccountingService.Models.Compte", "CompteDepot")
                        .WithMany()
                        .HasForeignKey("CompteDepotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinpalAccountingService.Models.CompteMensuel", null)
                        .WithMany("Epargnes")
                        .HasForeignKey("CompteMensuelId");

                    b.Navigation("CompteDepot");
                });

            modelBuilder.Entity("FinpalAccountingService.Models.Facture", b =>
                {
                    b.HasOne("FinpalAccountingService.Models.Compte", "CompteDePrelevement")
                        .WithMany()
                        .HasForeignKey("CompteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinpalAccountingService.Models.CompteMensuel", null)
                        .WithMany("Factures")
                        .HasForeignKey("CompteMensuelId");

                    b.Navigation("CompteDePrelevement");
                });

            modelBuilder.Entity("FinpalAccountingService.Models.Revenu", b =>
                {
                    b.HasOne("FinpalAccountingService.Models.Compte", "CompteDeDepot")
                        .WithMany()
                        .HasForeignKey("CompteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinpalAccountingService.Models.CompteMensuel", null)
                        .WithMany("Revenus")
                        .HasForeignKey("CompteMensuelId");

                    b.Navigation("CompteDeDepot");
                });

            modelBuilder.Entity("FinpalAccountingService.Models.Transaction", b =>
                {
                    b.HasOne("FinpalAccountingService.Models.Budget", "Budget")
                        .WithMany("Transactions")
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Budget");
                });

            modelBuilder.Entity("FinpalAccountingService.Models.Budget", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("FinpalAccountingService.Models.CompteAnnuel", b =>
                {
                    b.Navigation("ComptesMensuels");
                });

            modelBuilder.Entity("FinpalAccountingService.Models.CompteMensuel", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("Epargnes");

                    b.Navigation("Factures");

                    b.Navigation("Revenus");
                });

            modelBuilder.Entity("FinpalAccountingService.Models.User", b =>
                {
                    b.Navigation("Comptes");

                    b.Navigation("ComptesAnnuels");
                });
#pragma warning restore 612, 618
        }
    }
}
